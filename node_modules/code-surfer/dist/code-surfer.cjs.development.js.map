{"version":3,"file":"code-surfer.cjs.development.js","sources":["../src/step.js","../src/codeblock-metastring-parser.ts","../src/step-reader.js","../src/error-boundary.tsx","../src/use-steps.js","../src/use-step-spring.js","../src/layout.tsx","../src/notes.js","../src/column-layout.tsx"],"sourcesContent":["import React from \"react\";\n\nfunction Step() {\n  return null;\n}\n\nexport default Step;\n","import { parse } from \"shell-quote\";\n\ntype ParsedMetastring = { focus?: string } | { [key: string]: string };\n\n/**\n * The metastring is the thing that comes after the language in markdown codeblocks\n *\n * ```js this is the metastring\n * code goes here\n * ```\n */\nexport function parseMetastring(metastring: string): ParsedMetastring {\n  if (!metastring) {\n    return {};\n  }\n\n  const argv = parse(metastring);\n  const result: ParsedMetastring = {};\n  argv.forEach(arg => {\n    if (!arg.includes(\"=\")) {\n      if (arg === \"showNumbers\") {\n        result[\"showNumbers\"] = true;\n      } else {\n        result.focus = arg;\n      }\n    } else {\n      const [key, value] = arg.split(/=(.*)/);\n      if (value === \"true\") {\n        result[key] = true;\n      } else {\n        result[key] = value;\n      }\n    }\n  });\n  return result;\n}\n","import { parseMetastring } from \"./codeblock-metastring-parser\";\n\nexport function isCode(element) {\n  return element && element.props && element.props.mdxType === \"pre\";\n}\n\nexport function readStepFromElement(element) {\n  if (!isCode(element)) {\n    throw new Error(\n      \"Invalid element inside <CodeSurfer/>. Make sure to add empty lines (no spaces) before and after each codeblock.\"\n    );\n  }\n\n  const { props } = element.props.children;\n\n  const className = props.className && props.className.split(\" \")[0];\n  return {\n    code: props.children,\n    lang: className && className.substring(\"language-\".length),\n    ...parseMetastring(props.metastring)\n  };\n}\n","import React from \"react\";\nimport { UnknownError } from \"@code-surfer/standalone\";\n\nexport default class ErrorBoundary extends React.Component<\n  {},\n  { error?: any }\n> {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n\n  componentDidCatch(error, info) {\n    // console.log(error, info);\n  }\n\n  render() {\n    if (!this.state.error) {\n      return this.props.children;\n    } else if (this.state.error.element) {\n      return this.state.error.element;\n    } else {\n      console.error(this.state.error);\n      return <UnknownError error={this.state.error} />;\n    }\n  }\n}\n","import { useSteps } from \"mdx-deck\";\n\nexport default function(stepsCount) {\n  const step = useSteps(stepsCount);\n  return step === Infinity ? 0 : step;\n}\n","import useSteps from \"./use-steps\";\nimport { useSpring } from \"use-spring\";\n\nfunction useStepSpring(stepsCount) {\n  // step index according to mdx-deck\n  const targetStepIndex = useSteps(stepsCount - 1);\n\n  // real number between 0 and stepsCount - 1\n  const currentStepSpring = useSpring(targetStepIndex, {\n    decimals: 3,\n    stiffness: 80,\n    damping: 48,\n    mass: 8\n  });\n\n  return currentStepSpring;\n}\n\nexport { useStepSpring };\n","import React from \"react\";\nimport { useDeck } from \"mdx-deck\";\nimport { CodeSurfer } from \"@code-surfer/standalone\";\nimport { readStepFromElement } from \"./step-reader\";\nimport ErrorBoundary from \"./error-boundary\";\nimport { useStepSpring } from \"./use-step-spring\";\n\nfunction CodeSurferLayout({ children, theme }) {\n  const deck = useDeck();\n  const steps = React.useMemo(getStepsFromChildren(children), [deck.index]);\n\n  // useNotes(steps.map(s => s.notesElement));\n  const progress = useStepSpring(steps.length);\n\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        maxWidth: \"100%\",\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n      className=\"cs-layout\"\n    >\n      <CodeSurfer steps={steps} progress={progress} theme={theme} />\n    </div>\n  );\n}\n\nconst getStepsFromChildren = children => () => {\n  const steps = React.Children.map(children || [], child =>\n    readStepFromElement(child)\n  ).filter(x => x);\n  if (steps.length === 0) {\n    throw Error(\"No codeblocks found inside <CodeSurfer/>.\");\n  }\n  return steps;\n};\n\nexport default props => (\n  <ErrorBoundary>\n    <CodeSurferLayout {...props} />\n  </ErrorBoundary>\n);\n","import { useDeck } from \"mdx-deck\";\nimport React from \"react\";\n\nexport function useNotes(notesElements) {\n  const context = useDeck();\n  React.useEffect(() => {\n    if (!context || !context.register) return;\n    if (typeof context.index === \"undefined\") return;\n\n    const notes = getNotesFromElements(notesElements);\n\n    context.register(context.index, {\n      notes\n    });\n  }, []);\n}\n\nfunction getNotesFromElements(notesElements) {\n  const notes = notesElements.map(element => {\n    if (!element) {\n      // this is a step with empty notes\n      return null;\n    }\n\n    const { props } = element;\n\n    if (props.inline) {\n      // this is <Notes inline={true} />\n      return {\n        inline: true,\n        text: props.children\n      };\n    }\n\n    // this is <Notes>something</Notes>\n    // we shouldn't return an object here,\n    // to be compatible with the default Presenter\n    return props && props.children;\n  });\n\n  if (notes.length) {\n    const lastNotes = notes[notes.length - 1];\n    // we add an extra EOL to the last step\n    notes[notes.length - 1] = (lastNotes || \"\") + \"\\n\";\n  }\n\n  return notes;\n}\n\nexport function getTextFromNotes(notes) {\n  if (notes === null) {\n    // this is a step with empty notes\n    // we don't add extra lines here\n    // to allow a line of text with multiple notes\n    return \"\";\n  }\n\n  if (typeof notes === \"object\") {\n    // this comes from a step with inline=true\n    // but we check again just in case\n    return notes.text + (notes.inline ? \"\" : \"\\n\");\n  } else {\n    // this could be an empty note from any slide\n    // or a note from a step without the inline prop\n    return notes + \"\\n\";\n  }\n}\n","import React from \"react\";\nimport { readStepFromElement, isCode } from \"./step-reader\";\nimport { CodeSurfer } from \"@code-surfer/standalone\";\nimport { StylesProvider, Styled } from \"@code-surfer/themes\";\nimport { useDeck, Notes } from \"mdx-deck\";\nimport ErrorBoundary from \"./error-boundary\";\nimport { useNotes } from \"./notes\";\nimport { useStepSpring } from \"./use-step-spring\";\n\nfunction ColumnLayout({ children, themes = [], sizes }) {\n  const deck = useDeck();\n  const [columns, titles, subtitles, notesElements] = React.useMemo(\n    () => getColumnsFromChildren(children, sizes),\n    [deck.index]\n  );\n\n  useNotes(notesElements);\n  const progress = useStepSpring(columns[0].steps.length);\n  const stepIndex = Math.round(progress);\n\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        maxWidth: \"100%\",\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: \"0.8em\",\n        position: \"relative\"\n      }}\n      className=\"cs-col-layout\"\n    >\n      {columns.map((column, i) => (\n        <Column key={i} column={column} progress={progress} theme={themes[i]} />\n      ))}\n\n      <StylesProvider>\n        <Title text={titles[stepIndex]} />\n        <Subtitle text={subtitles[stepIndex]} />\n      </StylesProvider>\n    </div>\n  );\n}\n\nfunction Column({ column, progress, theme }) {\n  return (\n    <div\n      style={{\n        flex: column.flex,\n        overflow: \"hidden\",\n        height: \"100%\"\n      }}\n    >\n      {column.isCode ? (\n        <CodeSurfer steps={column.steps} progress={progress} theme={theme} />\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\"\n          }}\n        >\n          {column.steps[Math.round(progress)].element}\n        </div>\n      )}\n    </div>\n  );\n}\nfunction Title({ text }) {\n  if (!text) return null;\n  return (\n    <Styled.Title className=\"cs-title\">\n      <span>{text}</span>\n    </Styled.Title>\n  );\n}\nfunction Subtitle({ text }) {\n  if (!text) return null;\n  return (\n    <Styled.Subtitle className=\"cs-subtitle\" style={{ margin: \"0.3em 0\" }}>\n      <span>{text}</span>\n    </Styled.Subtitle>\n  );\n}\n\nfunction getColumnsFromChildren(children, sizes = []) {\n  const columns = [];\n  const stepElements = React.Children.toArray(children);\n\n  if (stepElements.length === 0) {\n    throw Error(\"No <Step/> found inside <CodeSurferColumns/>.\");\n  }\n  stepElements.forEach((stepElement, stepIndex) => {\n    React.Children.toArray(stepElement.props.children).forEach(\n      (cellElement, columnIndex) => {\n        if (!cellElement || !cellElement.props) {\n          throw Error(\n            \"Invalid element inside <Step/>. Make sure to add empty lines (no spaces) before and after each element.\"\n          );\n        }\n\n        columns[columnIndex] = columns[columnIndex] || {\n          steps: [],\n          isCode: true\n        };\n\n        const step = isCode(cellElement)\n          ? readStepFromElement(cellElement)\n          : { element: cellElement };\n\n        columns[columnIndex].steps[stepIndex] = step;\n        columns[columnIndex].isCode =\n          columns[columnIndex].isCode && isCode(cellElement);\n      }\n    );\n  });\n\n  if (columns.length === 0) {\n    throw Error(\"<Step/> shouldn't be empty.\");\n  }\n\n  columns.forEach((column, columnIndex) => {\n    column.flex = sizes[columnIndex] || 1;\n  });\n\n  const titles = stepElements.map(stepElement => stepElement.props.title);\n  const subtitles = stepElements.map(stepElement => stepElement.props.subtitle);\n  const notesElements = stepElements.map(stepElement => {\n    const stepChildren = React.Children.toArray(stepElement.props.children);\n    const notesElement = stepChildren.find(\n      element => element.props && element.props.originalType === Notes\n    );\n    return notesElement;\n  });\n\n  return [columns, titles, subtitles, notesElements];\n}\n\nexport default props => (\n  <ErrorBoundary>\n    <ColumnLayout {...props} />\n  </ErrorBoundary>\n);\n"],"names":["Step","parseMetastring","metastring","argv","parse","result","forEach","arg","includes","focus","split","key","value","isCode","element","props","mdxType","readStepFromElement","Error","children","className","code","lang","substring","length","ErrorBoundary","state","getDerivedStateFromError","error","componentDidCatch","info","render","console","React","UnknownError","Component","stepsCount","step","useSteps","Infinity","useStepSpring","targetStepIndex","currentStepSpring","useSpring","decimals","stiffness","damping","mass","CodeSurferLayout","theme","deck","useDeck","steps","useMemo","getStepsFromChildren","index","progress","style","width","maxWidth","height","display","flexDirection","justifyContent","alignItems","CodeSurfer","Children","map","child","filter","x","useNotes","notesElements","context","useEffect","register","notes","getNotesFromElements","inline","text","lastNotes","ColumnLayout","themes","sizes","getColumnsFromChildren","columns","titles","subtitles","stepIndex","Math","round","fontSize","position","column","i","Column","StylesProvider","Title","Subtitle","flex","overflow","Styled","margin","stepElements","toArray","stepElement","cellElement","columnIndex","title","subtitle","stepChildren","notesElement","find","originalType","Notes"],"mappings":";;;;;;;;;;;AAEA,SAASA,IAAT,GAAgB;SACP,IAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCF;;;;;;;;AAOA,SAAgBC,gBAAgBC;MAC1B,CAACA,UAAL,EAAiB;WACR,EAAP;;;MAGIC,IAAI,GAAGC,gBAAK,CAACF,UAAD,CAAlB;MACMG,MAAM,GAAqB,EAAjC;EACAF,IAAI,CAACG,OAAL,CAAa,UAAAC,GAAG;QACV,CAACA,GAAG,CAACC,QAAJ,CAAa,GAAb,CAAL,EAAwB;UAClBD,GAAG,KAAK,aAAZ,EAA2B;QACzBF,MAAM,CAAC,aAAD,CAAN,GAAwB,IAAxB;OADF,MAEO;QACLA,MAAM,CAACI,KAAP,GAAeF,GAAf;;KAJJ,MAMO;uBACgBA,GAAG,CAACG,KAAJ,CAAU,OAAV,CADhB;UACEC,GADF;UACOC,KADP;;UAEDA,KAAK,KAAK,MAAd,EAAsB;QACpBP,MAAM,CAACM,GAAD,CAAN,GAAc,IAAd;OADF,MAEO;QACLN,MAAM,CAACM,GAAD,CAAN,GAAcC,KAAd;;;GAZN;SAgBOP,MAAP;;;AChCK,SAASQ,MAAT,CAAgBC,OAAhB,EAAyB;SACvBA,OAAO,IAAIA,OAAO,CAACC,KAAnB,IAA4BD,OAAO,CAACC,KAAR,CAAcC,OAAd,KAA0B,KAA7D;;AAGF,AAAO,SAASC,mBAAT,CAA6BH,OAA7B,EAAsC;MACvC,CAACD,MAAM,CAACC,OAAD,CAAX,EAAsB;UACd,IAAII,KAAJ,CACJ,iHADI,CAAN;;;MAKMH,KAPmC,GAOzBD,OAAO,CAACC,KAAR,CAAcI,QAPW,CAOnCJ,KAPmC;MASrCK,SAAS,GAAGL,KAAK,CAACK,SAAN,IAAmBL,KAAK,CAACK,SAAN,CAAgBV,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAArC;;IAEEW,IAAI,EAAEN,KAAK,CAACI,QADd;IAEEG,IAAI,EAAEF,SAAS,IAAIA,SAAS,CAACG,SAAV,CAAoB,YAAYC,MAAhC;KAChBvB,eAAe,CAACc,KAAK,CAACb,UAAP,CAHpB;;;ICbmBuB;;;;;yBAIPV,KAAZ;;;wCACQA,KAAN;UACKW,KAAL,GAAa,EAAb;;;;gBAGKC,2BAAP,kCAAgCC,KAAhC;WACS;MAAEA,KAAK,EAALA;KAAT;;;;;SAGFC,oBAAA,2BAAkBD,KAAlB,EAAyBE,IAAzB;;;SAIAC,SAAA;QACM,CAAC,KAAKL,KAAL,CAAWE,KAAhB,EAAuB;aACd,KAAKb,KAAL,CAAWI,QAAlB;KADF,MAEO,IAAI,KAAKO,KAAL,CAAWE,KAAX,CAAiBd,OAArB,EAA8B;aAC5B,KAAKY,KAAL,CAAWE,KAAX,CAAiBd,OAAxB;KADK,MAEA;MACLkB,OAAO,CAACJ,KAAR,CAAc,KAAKF,KAAL,CAAWE,KAAzB;aACOK,mBAAA,CAACC,uBAAD;QAAcN,KAAK,EAAE,KAAKF,KAAL,CAAWE;OAAhC,CAAP;;;;;EAxBqCK,KAAK,CAACE;;ACDlC,mBAASC,UAAT,EAAqB;MAC5BC,IAAI,GAAGC,gBAAQ,CAACF,UAAD,CAArB;SACOC,IAAI,KAAKE,QAAT,GAAoB,CAApB,GAAwBF,IAA/B;;;ACDF,SAASG,aAAT,CAAuBJ,UAAvB,EAAmC;;MAE3BK,eAAe,GAAGH,QAAQ,CAACF,UAAU,GAAG,CAAd,CAAhC,CAFiC;;MAK3BM,iBAAiB,GAAGC,mBAAS,CAACF,eAAD,EAAkB;IACnDG,QAAQ,EAAE,CADyC;IAEnDC,SAAS,EAAE,EAFwC;IAGnDC,OAAO,EAAE,EAH0C;IAInDC,IAAI,EAAE;GAJ2B,CAAnC;SAOOL,iBAAP;;;ACRF,SAASM,gBAAT;MAA4B7B,gBAAAA;MAAU8B,aAAAA;MAC9BC,IAAI,GAAGC,eAAO,EAApB;MACMC,KAAK,GAAGnB,KAAK,CAACoB,OAAN,CAAcC,oBAAoB,CAACnC,QAAD,CAAlC,EAA8C,CAAC+B,IAAI,CAACK,KAAN,CAA9C,CAAd;;MAGMC,QAAQ,GAAGhB,aAAa,CAACY,KAAK,CAAC5B,MAAP,CAA9B;SAGES,mBAAA,MAAA;IACEwB,KAAK,EAAE;MACLC,KAAK,EAAE,OADF;MAELC,QAAQ,EAAE,MAFL;MAGLC,MAAM,EAAE,OAHH;MAILC,OAAO,EAAE,MAJJ;MAKLC,aAAa,EAAE,QALV;MAMLC,cAAc,EAAE,QANX;MAOLC,UAAU,EAAE;;IAEd5C,SAAS,EAAC;GAVZ,EAYEa,mBAAA,CAACgC,qBAAD;IAAYb,KAAK,EAAEA;IAAOI,QAAQ,EAAEA;IAAUP,KAAK,EAAEA;GAArD,CAZF,CADF;;;AAkBF,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAnC,QAAQ;SAAI;QACjCiC,KAAK,GAAGnB,KAAK,CAACiC,QAAN,CAAeC,GAAf,CAAmBhD,QAAQ,IAAI,EAA/B,EAAmC,UAAAiD,KAAK;aACpDnD,mBAAmB,CAACmD,KAAD,CADiC;KAAxC,EAEZC,MAFY,CAEL,UAAAC,CAAC;aAAIA,CAAJ;KAFI,CAAd;;QAGIlB,KAAK,CAAC5B,MAAN,KAAiB,CAArB,EAAwB;YAChBN,KAAK,CAAC,2CAAD,CAAX;;;WAEKkC,KAAP;GAPmC;CAArC;;AAUA,cAAe,UAAArC,KAAK;SAClBkB,mBAAA,CAACR,aAAD,MAAA,EACEQ,mBAAA,CAACe,gBAAD,oBAAsBjC,MAAtB,CADF,CADkB;CAApB;;ACvCO,SAASwD,QAAT,CAAkBC,aAAlB,EAAiC;MAChCC,OAAO,GAAGtB,eAAO,EAAvB;EACAlB,KAAK,CAACyC,SAAN,CAAgB,YAAM;QAChB,CAACD,OAAD,IAAY,CAACA,OAAO,CAACE,QAAzB,EAAmC;QAC/B,OAAOF,OAAO,CAAClB,KAAf,KAAyB,WAA7B,EAA0C;QAEpCqB,KAAK,GAAGC,oBAAoB,CAACL,aAAD,CAAlC;IAEAC,OAAO,CAACE,QAAR,CAAiBF,OAAO,CAAClB,KAAzB,EAAgC;MAC9BqB,KAAK,EAALA;KADF;GANF,EASG,EATH;;;AAYF,SAASC,oBAAT,CAA8BL,aAA9B,EAA6C;MACrCI,KAAK,GAAGJ,aAAa,CAACL,GAAd,CAAkB,UAAArD,OAAO,EAAI;QACrC,CAACA,OAAL,EAAc;;aAEL,IAAP;;;QAGMC,KANiC,GAMvBD,OANuB,CAMjCC,KANiC;;QAQrCA,KAAK,CAAC+D,MAAV,EAAkB;;aAET;QACLA,MAAM,EAAE,IADH;QAELC,IAAI,EAAEhE,KAAK,CAACI;OAFd;KAVuC;;;;;WAmBlCJ,KAAK,IAAIA,KAAK,CAACI,QAAtB;GAnBY,CAAd;;MAsBIyD,KAAK,CAACpD,MAAV,EAAkB;QACVwD,SAAS,GAAGJ,KAAK,CAACA,KAAK,CAACpD,MAAN,GAAe,CAAhB,CAAvB,CADgB;;IAGhBoD,KAAK,CAACA,KAAK,CAACpD,MAAN,GAAe,CAAhB,CAAL,GAA0B,CAACwD,SAAS,IAAI,EAAd,IAAoB,IAA9C;;;SAGKJ,KAAP;;;ACrCF,SAASK,YAAT;MAAwB9D,gBAAAA;yBAAU+D;MAAAA,oCAAS;MAAIC,aAAAA;MACvCjC,IAAI,GAAGC,eAAO,EAApB;;uBACoDlB,KAAK,CAACoB,OAAN,CAClD;WAAM+B,sBAAsB,CAACjE,QAAD,EAAWgE,KAAX,CAA5B;GADkD,EAElD,CAACjC,IAAI,CAACK,KAAN,CAFkD;MAA7C8B;MAASC;MAAQC;MAAWf;;EAKnCD,QAAQ,CAACC,aAAD,CAAR;MACMhB,QAAQ,GAAGhB,aAAa,CAAC6C,OAAO,CAAC,CAAD,CAAP,CAAWjC,KAAX,CAAiB5B,MAAlB,CAA9B;MACMgE,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWlC,QAAX,CAAlB;SAGEvB,mBAAA,MAAA;IACEwB,KAAK,EAAE;MACLC,KAAK,EAAE,OADF;MAELC,QAAQ,EAAE,MAFL;MAGLC,MAAM,EAAE,OAHH;MAILC,OAAO,EAAE,MAJJ;MAKLC,aAAa,EAAE,KALV;MAMLC,cAAc,EAAE,QANX;MAOLC,UAAU,EAAE,QAPP;MAQL2B,QAAQ,EAAE,OARL;MASLC,QAAQ,EAAE;;IAEZxE,SAAS,EAAC;GAZZ,EAcGiE,OAAO,CAAClB,GAAR,CAAY,UAAC0B,MAAD,EAASC,CAAT;WACX7D,mBAAA,CAAC8D,MAAD;MAAQpF,GAAG,EAAEmF;MAAGD,MAAM,EAAEA;MAAQrC,QAAQ,EAAEA;MAAUP,KAAK,EAAEiC,QAAM,CAACY,CAAD;KAAjE,CADW;GAAZ,CAdH,EAkBE7D,mBAAA,CAAC+D,qBAAD,MAAA,EACE/D,mBAAA,CAACgE,KAAD;IAAOlB,IAAI,EAAEO,MAAM,CAACE,SAAD;GAAnB,CADF,EAEEvD,mBAAA,CAACiE,QAAD;IAAUnB,IAAI,EAAEQ,SAAS,CAACC,SAAD;GAAzB,CAFF,CAlBF,CADF;;;AA2BF,SAASO,MAAT;MAAkBF,eAAAA;MAAQrC,iBAAAA;MAAUP,cAAAA;SAEhChB,mBAAA,MAAA;IACEwB,KAAK,EAAE;MACL0C,IAAI,EAAEN,MAAM,CAACM,IADR;MAELC,QAAQ,EAAE,QAFL;MAGLxC,MAAM,EAAE;;GAJZ,EAOGiC,MAAM,CAAChF,MAAP,GACCoB,mBAAA,CAACgC,qBAAD;IAAYb,KAAK,EAAEyC,MAAM,CAACzC;IAAOI,QAAQ,EAAEA;IAAUP,KAAK,EAAEA;GAA5D,CADD,GAGChB,mBAAA,MAAA;IACEwB,KAAK,EAAE;MACLI,OAAO,EAAE,MADJ;MAELE,cAAc,EAAE,QAFX;MAGLC,UAAU,EAAE,QAHP;MAILJ,MAAM,EAAE;;GALZ,EAQGiC,MAAM,CAACzC,KAAP,CAAaqC,IAAI,CAACC,KAAL,CAAWlC,QAAX,CAAb,EAAmC1C,OARtC,CAVJ,CADF;;;AAyBF,SAASmF,KAAT;MAAiBlB,aAAAA;MACX,CAACA,IAAL,EAAW,OAAO,IAAP;SAET9C,mBAAA,CAACoE,aAAM,CAACJ,KAAR;IAAc7E,SAAS,EAAC;GAAxB,EACEa,mBAAA,OAAA,MAAA,EAAO8C,IAAP,CADF,CADF;;;AAMF,SAASmB,QAAT;MAAoBnB,aAAAA;MACd,CAACA,IAAL,EAAW,OAAO,IAAP;SAET9C,mBAAA,CAACoE,aAAM,CAACH,QAAR;IAAiB9E,SAAS,EAAC;IAAcqC,KAAK,EAAE;MAAE6C,MAAM,EAAE;;GAA1D,EACErE,mBAAA,OAAA,MAAA,EAAO8C,IAAP,CADF,CADF;;;AAOF,SAASK,sBAAT,CAAgCjE,QAAhC,EAA0CgE,KAA1C;MAA0CA;IAAAA,QAAQ;;;MAC1CE,OAAO,GAAG,EAAhB;MACMkB,YAAY,GAAGtE,KAAK,CAACiC,QAAN,CAAesC,OAAf,CAAuBrF,QAAvB,CAArB;;MAEIoF,YAAY,CAAC/E,MAAb,KAAwB,CAA5B,EAA+B;UACvBN,KAAK,CAAC,+CAAD,CAAX;;;EAEFqF,YAAY,CAACjG,OAAb,CAAqB,UAACmG,WAAD,EAAcjB,SAAd;IACnBvD,KAAK,CAACiC,QAAN,CAAesC,OAAf,CAAuBC,WAAW,CAAC1F,KAAZ,CAAkBI,QAAzC,EAAmDb,OAAnD,CACE,UAACoG,WAAD,EAAcC,WAAd;UACM,CAACD,WAAD,IAAgB,CAACA,WAAW,CAAC3F,KAAjC,EAAwC;cAChCG,KAAK,CACT,yGADS,CAAX;;;MAKFmE,OAAO,CAACsB,WAAD,CAAP,GAAuBtB,OAAO,CAACsB,WAAD,CAAP,IAAwB;QAC7CvD,KAAK,EAAE,EADsC;QAE7CvC,MAAM,EAAE;OAFV;UAKMwB,IAAI,GAAGxB,MAAM,CAAC6F,WAAD,CAAN,GACTzF,mBAAmB,CAACyF,WAAD,CADV,GAET;QAAE5F,OAAO,EAAE4F;OAFf;MAIArB,OAAO,CAACsB,WAAD,CAAP,CAAqBvD,KAArB,CAA2BoC,SAA3B,IAAwCnD,IAAxC;MACAgD,OAAO,CAACsB,WAAD,CAAP,CAAqB9F,MAArB,GACEwE,OAAO,CAACsB,WAAD,CAAP,CAAqB9F,MAArB,IAA+BA,MAAM,CAAC6F,WAAD,CADvC;KAlBJ;GADF;;MAyBIrB,OAAO,CAAC7D,MAAR,KAAmB,CAAvB,EAA0B;UAClBN,KAAK,CAAC,6BAAD,CAAX;;;EAGFmE,OAAO,CAAC/E,OAAR,CAAgB,UAACuF,MAAD,EAASc,WAAT;IACdd,MAAM,CAACM,IAAP,GAAchB,KAAK,CAACwB,WAAD,CAAL,IAAsB,CAApC;GADF;MAIMrB,MAAM,GAAGiB,YAAY,CAACpC,GAAb,CAAiB,UAAAsC,WAAW;WAAIA,WAAW,CAAC1F,KAAZ,CAAkB6F,KAAtB;GAA5B,CAAf;MACMrB,SAAS,GAAGgB,YAAY,CAACpC,GAAb,CAAiB,UAAAsC,WAAW;WAAIA,WAAW,CAAC1F,KAAZ,CAAkB8F,QAAtB;GAA5B,CAAlB;MACMrC,aAAa,GAAG+B,YAAY,CAACpC,GAAb,CAAiB,UAAAsC,WAAW;QAC1CK,YAAY,GAAG7E,KAAK,CAACiC,QAAN,CAAesC,OAAf,CAAuBC,WAAW,CAAC1F,KAAZ,CAAkBI,QAAzC,CAArB;QACM4F,YAAY,GAAGD,YAAY,CAACE,IAAb,CACnB,UAAAlG,OAAO;aAAIA,OAAO,CAACC,KAAR,IAAiBD,OAAO,CAACC,KAAR,CAAckG,YAAd,KAA+BC,aAApD;KADY,CAArB;WAGOH,YAAP;GALoB,CAAtB;SAQO,CAAC1B,OAAD,EAAUC,MAAV,EAAkBC,SAAlB,EAA6Bf,aAA7B,CAAP;;;AAGF,oBAAe,UAAAzD,KAAK;SAClBkB,mBAAA,CAACR,aAAD,MAAA,EACEQ,mBAAA,CAACgD,YAAD,oBAAkBlE,MAAlB,CADF,CADkB;CAApB;;;;;;"}